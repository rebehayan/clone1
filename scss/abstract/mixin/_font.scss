@use "sass:meta" as *;
@use "sass:list";
@use "sass:string";

@forward "./margin";

@function get-value($props, $key) {
  $index: list.index($props, $key);
  @if $index != null {
    $value: list.nth($props, $index + 1);
    @return if(type-of($value) != string, $value, string.unquote($value));
  } @else {
    @return null;
  }
}

// @function get-match-value-of-keys($values, $keys) {
//   $value: null;
//   @each $key in $keys {
//     $value: if($value, $value, get-value-after-key($values, $key));
//   }
//   @return $value;
// }

@mixin set-key-value($props, $prop, $types) {
  @each $key in $types {
    #{$prop}: get-value($props, $key);
  }
}

@mixin font($props) {
  @if type-of($props) != list {
    @error "$props #{$props} 타입은 list만 허용합니다.";
  }
  @include set-key-value($props, font-weight, w fw weight);
  @include set-key-value($props, font-style, s ft style);
  @include set-key-value($props, font-size, z fs size);
  @include set-key-value($props, line-height, l lh height);
  @include set-key-value($props, font-family, f ff family);
  @include set-key-value($props, color, c color);
}
